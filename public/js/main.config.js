'use strict';

angular.module('swiss', ['ui.router', 'foundation', 'foundation.common', 'ngAnimate', 'mm.foundation', 'firebase', 'wu.masonry']).constant('GEOCODE', 'https://maps.googleapis.com/maps/api/geocode/json').constant('FIRE_URL', 'https://swa.firebaseio.com/').constant('WEATHER_URL', 'https://api.forecast.io/forecast/a47fe05b83da643fd561f7e57e4ca650/').config(function ($stateProvider, $urlRouterProvider, $locationProvider) {
	$urlRouterProvider.when('', '/landing');
	$urlRouterProvider.otherwise('/landing');

	$locationProvider.html5Mode({
		enabled: false,
		requireBase: false
	});

	$stateProvider.state('start', {
		url: '/landing',
		templateUrl: 'assets/landing.html',
		controller: 'mainController',
		controllerAs: 'Ctrl'
	}).state('start.engage', {
		url: '/:city/:lat/:long',
		views: {
			'weather': {
				templateUrl: 'assets/weather.html',
				controller: 'weatherController',
				controllerAs: 'wCtrl'
			},
			'news': {
				templateUrl: 'assets/news.html',
				controller: 'newsController',
				controllerAs: 'nCtrl'
			},
			'toDo': {
				templateUrl: 'assets/news.html',
				controller: 'todoController',
				controllerAs: 'tdCtrl'
			}
		},
		resolve: {
			'currentAuth': function currentAuth(Auth) {
				return Auth.$waitForAuth();
			}
		}
	});
}).run(function ($rootScope, $state) {
	$rootScope.$on("$routeChangeError", function (event, next, previous, error) {
		if (error === "AUTH_REQUIRED") {
			$state.go('/landing');
		}
	});
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9tYWluLmNvbmZpZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFDLFlBQVksRUFBRSxtQkFBbUIsRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUUvSCxRQUFRLENBQUMsU0FBUyxFQUFFLG1EQUFtRCxDQUFDLENBRXhFLFFBQVEsQ0FBQyxVQUFVLEVBQUUsNkJBQTZCLENBQUMsQ0FFbkQsUUFBUSxDQUFDLGFBQWEsRUFBRSxvRUFBb0UsQ0FBQyxDQUU3RixNQUFNLENBQUMsVUFBVSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsaUJBQWlCLEVBQUU7QUFDeEUsbUJBQWtCLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsQ0FBQztBQUN4QyxtQkFBa0IsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7O0FBRXpDLGtCQUFpQixDQUFDLFNBQVMsQ0FBQztBQUMzQixTQUFPLEVBQUUsS0FBSztBQUNkLGFBQVcsRUFBRSxLQUFLO0VBQ2xCLENBQUMsQ0FBQzs7QUFFSCxlQUFjLENBQ2IsS0FBSyxDQUFDLE9BQU8sRUFBRTtBQUNmLEtBQUcsRUFBRSxVQUFVO0FBQ1osYUFBVyxFQUFFLHFCQUFxQjtBQUNsQyxZQUFVLEVBQUUsZ0JBQWdCO0FBQzVCLGNBQVksRUFBRSxNQUFNO0VBQ3JCLENBQUMsQ0FFSCxLQUFLLENBQUMsY0FBYyxFQUFFO0FBQ3RCLEtBQUcsRUFBRSxtQkFBbUI7QUFDckIsT0FBSyxFQUFFO0FBQ0wsWUFBUyxFQUFFO0FBQ1QsZUFBVyxFQUFFLHFCQUFxQjtBQUNsQyxjQUFVLEVBQUUsbUJBQW1CO0FBQy9CLGdCQUFZLEVBQUUsT0FBTztJQUN0QjtBQUNELFNBQU0sRUFBRTtBQUNOLGVBQVcsRUFBRSxrQkFBa0I7QUFDL0IsY0FBVSxFQUFFLGdCQUFnQjtBQUM1QixnQkFBWSxFQUFFLE9BQU87SUFDdEI7QUFDRCxTQUFNLEVBQUU7QUFDTixlQUFXLEVBQUUsa0JBQWtCO0FBQy9CLGNBQVUsRUFBRSxnQkFBZ0I7QUFDNUIsZ0JBQVksRUFBRSxRQUFRO0lBQ3ZCO0dBQ0Y7QUFDRCxTQUFPLEVBQUU7QUFDUixnQkFBYSxFQUFFLHFCQUFVLElBQUksRUFBRTtBQUM5QixXQUFPLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzQjtHQUNEO0VBQ0osQ0FBQyxDQUFBO0NBQ0YsQ0FBQyxDQUdELEdBQUcsQ0FBQyxVQUFTLFVBQVUsRUFBRSxNQUFNLEVBQUU7QUFDakMsV0FBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxVQUFTLEtBQUssRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRTtBQUN4RSxNQUFJLEtBQUssS0FBSyxlQUFlLEVBQUU7QUFDN0IsU0FBTSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztHQUN2QjtFQUNILENBQUMsQ0FBQztDQUNILENBQUMsQ0FBQSIsImZpbGUiOiJzcmMvanMvbWFpbi5jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnc3dpc3MnLCBbJ3VpLnJvdXRlcicsJ2ZvdW5kYXRpb24nLCAnZm91bmRhdGlvbi5jb21tb24nLCAnbmdBbmltYXRlJywgJ21tLmZvdW5kYXRpb24nLCAnZmlyZWJhc2UnLCAnd3UubWFzb25yeSddKVxuXG4uY29uc3RhbnQoJ0dFT0NPREUnLCAnaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2dlb2NvZGUvanNvbicpXG5cbi5jb25zdGFudCgnRklSRV9VUkwnLCAnaHR0cHM6Ly9zd2EuZmlyZWJhc2Vpby5jb20vJylcblxuLmNvbnN0YW50KCdXRUFUSEVSX1VSTCcsICdodHRwczovL2FwaS5mb3JlY2FzdC5pby9mb3JlY2FzdC9hNDdmZTA1YjgzZGE2NDNmZDU2MWY3ZTU3ZTRjYTY1MC8nKVxuXG4uY29uZmlnKGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xuXHQkdXJsUm91dGVyUHJvdmlkZXIud2hlbignJywgJy9sYW5kaW5nJyk7XG5cdCR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9sYW5kaW5nJyk7XG5cblx0JGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHtcblx0XHRlbmFibGVkOiBmYWxzZSxcblx0XHRyZXF1aXJlQmFzZTogZmFsc2Vcblx0fSk7XG5cblx0JHN0YXRlUHJvdmlkZXJcblx0LnN0YXRlKCdzdGFydCcsIHtcblx0XHR1cmw6ICcvbGFuZGluZycsXG5cdCAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy9sYW5kaW5nLmh0bWwnLFxuXHQgICBcdGNvbnRyb2xsZXI6ICdtYWluQ29udHJvbGxlcicsXG5cdCAgICBjb250cm9sbGVyQXM6ICdDdHJsJ1xuICBcdH0pXG5cblx0LnN0YXRlKCdzdGFydC5lbmdhZ2UnLCB7XG5cdFx0dXJsOiAnLzpjaXR5LzpsYXQvOmxvbmcnLFxuXHQgICAgdmlld3M6IHtcblx0ICAgICAgJ3dlYXRoZXInOiB7XG5cdCAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvd2VhdGhlci5odG1sJyxcblx0ICAgICAgICBjb250cm9sbGVyOiAnd2VhdGhlckNvbnRyb2xsZXInLFxuXHQgICAgICAgIGNvbnRyb2xsZXJBczogJ3dDdHJsJ1xuXHQgICAgICB9LFxuXHQgICAgICAnbmV3cyc6IHtcblx0ICAgICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy9uZXdzLmh0bWwnLFxuXHQgICAgICAgIGNvbnRyb2xsZXI6ICduZXdzQ29udHJvbGxlcicsXG5cdCAgICAgICAgY29udHJvbGxlckFzOiAnbkN0cmwnXG5cdCAgICAgIH0sXG5cdCAgICAgICd0b0RvJzoge1xuXHQgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL25ld3MuaHRtbCcsXG5cdCAgICAgICAgY29udHJvbGxlcjogJ3RvZG9Db250cm9sbGVyJyxcblx0ICAgICAgICBjb250cm9sbGVyQXM6ICd0ZEN0cmwnXG5cdCAgICAgIH1cblx0ICAgIH0sXG5cdCAgICByZXNvbHZlOiB7XG5cdCAgICBcdCdjdXJyZW50QXV0aCc6IGZ1bmN0aW9uIChBdXRoKSB7XG5cdCAgICBcdFx0cmV0dXJuIEF1dGguJHdhaXRGb3JBdXRoKCk7XG5cdCAgICBcdH1cblx0ICAgIH1cblx0fSlcbn0pXG5cblxuLnJ1bihmdW5jdGlvbigkcm9vdFNjb3BlLCAkc3RhdGUpIHtcblx0JHJvb3RTY29wZS4kb24oXCIkcm91dGVDaGFuZ2VFcnJvclwiLCBmdW5jdGlvbihldmVudCwgbmV4dCwgcHJldmlvdXMsIGVycm9yKSB7XG4gIFx0XHRpZiAoZXJyb3IgPT09IFwiQVVUSF9SRVFVSVJFRFwiKSB7XG4gICAgXHRcdCRzdGF0ZS5nbygnL2xhbmRpbmcnKTtcbiAgXHRcdH1cblx0fSk7XG59KVxuXG4iXX0=
