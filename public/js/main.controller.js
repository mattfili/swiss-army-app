'use strict';

angular.module('swiss').controller('mainController', function ($scope, $http, GEOCODE, $timeout, Auth, $firebaseAuth, LocalStorage, $rootScope, $state) {
	var vm = this;

	vm.display = true;
	vm.auth = Auth;

	vm.auth.$onAuth(function (authData) {
		if (authData) {
			vm.profile = authData;
			console.log('logged in as' + authData);
		} else {
			console.log('logged out');
			$state.go('start');
		}
	});

	vm.queryChanged = _.debounce(function () {
		$http.get(GEOCODE, {
			params: { address: vm.query }
		}).success(function (data) {
			vm.cities = data.results;
			vm.display = false;
		});
	}, 2000);

	vm.check = {
		weather: false,
		news: false,
		toDo: false
	};

	$rootScope.$on('$stateChangeSuccess', function (event, toState) {
		vm.cities = null;
	});
}).controller('weatherController', function ($scope, $timeout, Weather, WeatherData, currentAuth) {
	var vm = this;

	_.debounce(function () {
		Weather.getWeather();
		Weather.date();
		$scope.date = WeatherData.formatdate.toString();
		$scope.data = WeatherData;
	}, 2000)();
}).controller('newsController', function (Hacker, paperBoy, $scope, $timeout, currentAuth, $sce) {
	var vm = this;
	Hacker.topNews();
	Hacker.askStories();
	Hacker.showStories();
	vm.hackerNews = paperBoy.hackerNews;
}).controller('todoController', function ($scope, $timeout, currentAuth) {
	var vm = this;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9qcy9tYWluLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUV0QixVQUFVLENBQUMsZ0JBQWdCLEVBQUUsVUFBUyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTtBQUMvSCxLQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7O0FBRWQsR0FBRSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFDbEIsR0FBRSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7O0FBR2YsR0FBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxRQUFRLEVBQUU7QUFDbkMsTUFBSSxRQUFRLEVBQUU7QUFDYixLQUFFLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztBQUN0QixVQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQztHQUN2QyxNQUFNO0FBQ04sVUFBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMxQixTQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0dBQ25CO0VBQ0QsQ0FBQyxDQUFBOztBQUlGLEdBQUUsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxZQUFZO0FBQ3hDLE9BQUssQ0FDSixHQUFHLENBQUMsT0FBTyxFQUFFO0FBQ2IsU0FBTSxFQUFFLEVBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUM7R0FDM0IsQ0FBQyxDQUNELE9BQU8sQ0FBQyxVQUFTLElBQUksRUFBQztBQUN0QixLQUFFLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUE7QUFDeEIsS0FBRSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7R0FDbkIsQ0FBQyxDQUFBO0VBRUYsRUFBRSxJQUFJLENBQUMsQ0FBQzs7QUFFVCxHQUFFLENBQUMsS0FBSyxHQUFHO0FBQ1YsU0FBTyxFQUFFLEtBQUs7QUFDZCxNQUFJLEVBQUUsS0FBSztBQUNYLE1BQUksRUFBRSxLQUFLO0VBQ1gsQ0FBQTs7QUFFRCxXQUFVLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFLFVBQVUsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUMvRCxJQUFFLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztFQUNqQixDQUFDLENBQUE7Q0FFRixDQUFDLENBRUQsVUFBVSxDQUFDLG1CQUFtQixFQUFFLFVBQVMsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRTtBQUM5RixLQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7O0FBRWIsRUFBQyxDQUFDLFFBQVEsQ0FBQyxZQUFXO0FBQ3RCLFNBQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQTtBQUNwQixTQUFPLENBQUMsSUFBSSxFQUFFLENBQUE7QUFDZCxRQUFNLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUE7QUFDL0MsUUFBTSxDQUFDLElBQUksR0FBRyxXQUFXLENBQUE7RUFDekIsRUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0NBR1YsQ0FBQyxDQUVELFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFTLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFO0FBQzdGLEtBQUksRUFBRSxHQUFHLElBQUksQ0FBQztBQUNkLE9BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNqQixPQUFNLENBQUMsVUFBVSxFQUFFLENBQUM7QUFDcEIsT0FBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3JCLEdBQUUsQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQztDQUNwQyxDQUFDLENBRUQsVUFBVSxDQUFDLGdCQUFnQixFQUFFLFVBQVMsTUFBTSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUU7QUFDckUsS0FBSSxFQUFFLEdBQUcsSUFBSSxDQUFDO0NBRWQsQ0FBQyxDQUFBIiwiZmlsZSI6InNyYy9qcy9tYWluLmNvbnRyb2xsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnc3dpc3MnKVxuXG4uY29udHJvbGxlcignbWFpbkNvbnRyb2xsZXInLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCBHRU9DT0RFLCAkdGltZW91dCwgQXV0aCwgJGZpcmViYXNlQXV0aCwgTG9jYWxTdG9yYWdlLCAkcm9vdFNjb3BlLCAkc3RhdGUpIHtcblx0dmFyIHZtID0gdGhpcztcblxuXHR2bS5kaXNwbGF5ID0gdHJ1ZTtcblx0dm0uYXV0aCA9IEF1dGg7XG5cblxuXHR2bS5hdXRoLiRvbkF1dGgoZnVuY3Rpb24gKGF1dGhEYXRhKSB7XG5cdFx0aWYgKGF1dGhEYXRhKSB7XG5cdFx0XHR2bS5wcm9maWxlID0gYXV0aERhdGE7XG5cdFx0XHRjb25zb2xlLmxvZygnbG9nZ2VkIGluIGFzJyArIGF1dGhEYXRhKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc29sZS5sb2coJ2xvZ2dlZCBvdXQnKTtcblx0XHRcdCRzdGF0ZS5nbygnc3RhcnQnKTtcblx0XHR9XG5cdH0pXG5cblxuXG5cdHZtLnF1ZXJ5Q2hhbmdlZCA9IF8uZGVib3VuY2UoZnVuY3Rpb24gKCkge1xuXHRcdCRodHRwXG5cdFx0LmdldChHRU9DT0RFLCB7XG5cdFx0XHRwYXJhbXM6IHthZGRyZXNzOiB2bS5xdWVyeX1cblx0XHR9KVxuXHRcdC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0dm0uY2l0aWVzID0gZGF0YS5yZXN1bHRzXG5cdFx0XHR2bS5kaXNwbGF5ID0gZmFsc2U7XG5cdFx0fSlcblxuXHR9LCAyMDAwKTtcblxuXHR2bS5jaGVjayA9IHtcblx0XHR3ZWF0aGVyOiBmYWxzZSxcblx0XHRuZXdzOiBmYWxzZSxcblx0XHR0b0RvOiBmYWxzZVxuXHR9XG5cblx0JHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN1Y2Nlc3MnLCBmdW5jdGlvbiAoZXZlbnQsIHRvU3RhdGUpIHtcblx0XHR2bS5jaXRpZXMgPSBudWxsO1xuXHR9KVxuXG59KVxuXG4uY29udHJvbGxlcignd2VhdGhlckNvbnRyb2xsZXInLCBmdW5jdGlvbigkc2NvcGUsICR0aW1lb3V0LCBXZWF0aGVyLCBXZWF0aGVyRGF0YSwgY3VycmVudEF1dGgpIHtcblx0dmFyIHZtID0gdGhpcztcblxuXHRcdF8uZGVib3VuY2UoZnVuY3Rpb24oKSB7XG5cdFx0V2VhdGhlci5nZXRXZWF0aGVyKClcblx0XHRXZWF0aGVyLmRhdGUoKVxuXHRcdCRzY29wZS5kYXRlID0gV2VhdGhlckRhdGEuZm9ybWF0ZGF0ZS50b1N0cmluZygpXG5cdFx0JHNjb3BlLmRhdGEgPSBXZWF0aGVyRGF0YVxuXHR9LDIwMDApKCk7XG5cblxufSlcblxuLmNvbnRyb2xsZXIoJ25ld3NDb250cm9sbGVyJywgZnVuY3Rpb24oSGFja2VyLCBwYXBlckJveSwgJHNjb3BlLCAkdGltZW91dCwgY3VycmVudEF1dGgsICRzY2UpIHtcblx0dmFyIHZtID0gdGhpcztcblx0SGFja2VyLnRvcE5ld3MoKTtcblx0SGFja2VyLmFza1N0b3JpZXMoKTtcblx0SGFja2VyLnNob3dTdG9yaWVzKCk7XG5cdHZtLmhhY2tlck5ld3MgPSBwYXBlckJveS5oYWNrZXJOZXdzO1xufSlcblxuLmNvbnRyb2xsZXIoJ3RvZG9Db250cm9sbGVyJywgZnVuY3Rpb24oJHNjb3BlLCAkdGltZW91dCwgY3VycmVudEF1dGgpIHtcblx0dmFyIHZtID0gdGhpcztcblxufSlcblxuIl19
